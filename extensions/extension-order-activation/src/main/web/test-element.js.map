{"version":3,"file":"test-element.js","sourceRoot":"","sources":["src/test-element.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;AAEH,OAAO,EAAC,GAAG,EAAE,IAAI,EAAE,UAAU,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAC,MAAM,mBAAmB,CAAC;AAEhD;;;;;;GAMG;AAEH,IAAa,WAAW,GAAxB,MAAa,WAAY,SAAQ,UAAU;IAUhC,MAAM;QACb,OAAO,IAAI,CAAA;;yBAEU,IAAI,CAAC,mBAAmB;KAC5C,CAAC;IACJ,CAAC;IAEQ,YAAY;QACnB,iFAAiF;QACjF,EAAE;QACF,sEAAsE;QACtE,mFAAmF;QACnF,MAAM;IACR,CAAC;IAED,mBAAmB,CAAC,KAAkB;QACpC,OAAO,CAAC,GAAG,CAAC,qDAAqD,EAAE,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;IACjG,CAAC;CACF,CAAA;AA3BiB,kBAAM,GAAG,GAAG,CAAA;;;;;;;GAO1B,CAAA;AARS,WAAW;IADvB,aAAa,CAAC,cAAc,CAAC;GACjB,WAAW,CA4BvB;SA5BY,WAAW","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {css, html, LitElement} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\n/**\n * An example element.\n *\n * @fires count-changed - Indicates when the count changes\n * @slot - This element has a slot\n * @csspart button - The button\n */\n@customElement('test-element')\nexport class TestElement extends LitElement {\n  static override styles = css`\n    :host {\n      display: block;\n      border: solid 1px gray;\n      padding: 16px;\n      max-width: 800px;\n    }\n  `;\n\n  override render() {\n    return html`\n      <h1>Custom Element loaded</h1>\n      <slot @accepted=\"${this.handleAcceptedEvent}\"></slot>\n    `;\n  }\n\n  override firstUpdated() {\n    // const keycloakSignatureElement = document.querySelector('keycloak-signature');\n    //\n    // keycloakSignatureElement!.addEventListener('accepted', (event) => {\n    //   console.log('Accepted Custom Event received:  ' + event.detail.signedPayload);\n    // });\n  }\n\n  handleAcceptedEvent(event: CustomEvent) {\n    console.log('Accepted custom event received with signed payload:', event.detail.signedPayload);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'test-element': TestElement;\n  }\n}\n"]}