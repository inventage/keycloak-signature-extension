{"version":3,"file":"keycloak-page.js","sourceRoot":"","sources":["src/keycloak-page.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;AAEH,OAAO,EAAC,GAAG,EAAE,IAAI,EAAE,UAAU,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAC,MAAM,mBAAmB,CAAC;AAEhD;;;GAGG;AAEH,IAAa,YAAY,GAAzB,MAAa,YAAa,SAAQ,UAAU;IAUjC,MAAM;QACb,OAAO,IAAI,CAAA;;qCAEsB,IAAI,CAAC,mBAAmB,gBAAgB,IAAI,CAAC,mBAAmB,eAAe,IAAI,CAAC,kBAAkB;;;KAGtI,CAAC;IACJ,CAAC;IAEQ,YAAY;QACnB,iFAAiF;QACjF,EAAE;QACF,sEAAsE;QACtE,mFAAmF;QACnF,MAAM;IACR,CAAC;IAEO,mBAAmB,CAAC,KAAkB;QAC5C,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;IACxD,CAAC;IAEO,mBAAmB,CAAC,KAAkB;QAC5C,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;IACxD,CAAC;IAEO,kBAAkB,CAAC,KAAkB;QAC3C,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;IACvD,CAAC;CACF,CAAA;AArCiB,mBAAM,GAAG,GAAG,CAAA;;;;;;;GAO1B,CAAA;AARS,YAAY;IADxB,aAAa,CAAC,eAAe,CAAC;GAClB,YAAY,CAsCxB;SAtCY,YAAY","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {css, html, LitElement} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\n/**\n *\n * @slot - This element has a slot\n */\n@customElement('keycloak-page')\nexport class KeycloakPage extends LitElement {\n  static override styles = css`\n    :host {\n      display: block;\n      border: solid 1px gray;\n      padding: 16px;\n      max-width: 800px;\n    }\n  `;\n\n  override render() {\n    return html`\n      <h1>Keycloak Page</h1>\n      <keycloak-signature @signed=\"${this.handleAcceptedEvent}\" @rejected=\"${this.handleRejectedEvent}\" @failure=\"${this.handleFailureEvent}\" payload=\"overwritten payload\" title=\"Overwritten Title\" accept=\"Overwritten Accept\" reject=\"Overwritten Reject\">\n        <span>Overwritten Body<br/> <br/></span>\n      </keycloak-signature>\n    `;\n  }\n\n  override firstUpdated() {\n    // const keycloakSignatureElement = document.querySelector('keycloak-signature');\n    //\n    // keycloakSignatureElement!.addEventListener('accepted', (event) => {\n    //   console.log('Accepted Custom Event received:  ' + event.detail.signedPayload);\n    // });\n  }\n\n  private handleAcceptedEvent(event: CustomEvent) {\n    console.log('Accepted custom event received:', event);\n  }\n\n  private handleRejectedEvent(event: CustomEvent) {\n    console.log('Rejected custom event received:', event);\n  }\n\n  private handleFailureEvent(event: CustomEvent) {\n    console.log('Failure custom event received:', event);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'keycloak-page': KeycloakPage;\n  }\n}\n"]}