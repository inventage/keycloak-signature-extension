{"version":3,"file":"keycloak-signature.js","sourceRoot":"","sources":["src/keycloak-signature.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {css, html, LitElement, nothing} from 'lit';\nimport {customElement, property, query} from 'lit/decorators.js';\n\n/**\n * An example element.\n *\n * @fires count-changed - Indicates when the count changes\n * @slot - This element has a slot\n * @csspart button - The button\n */\n@customElement('keycloak-signature')\nexport class KeycloakSignature extends LitElement {\n  static override styles = css`\n    :host {\n      display: block;\n      border: solid 1px gray;\n      padding: 16px;\n      max-width: 800px;\n    }\n  `;\n\n  @property()\n  private signEndpoint = '/realms/master/signature-extension/sign';\n\n  @property( {attribute: 'payload', type: String} )\n  private payload : string | undefined;\n\n  @property( {attribute: 'title', type: String} )\n  private titleText = 'Title';\n\n  @property({attribute: 'accept', type: String})\n  private acceptText = 'Accept';\n\n  @property({attribute: 'reject', type: String})\n  private rejectText = 'Reject';\n\n  @property({attribute: 'max-nr-of-auth-attempts', type: Number})\n  private maxNrOfAuthAttempts = 3;\n\n  private attemptIndex = 1;\n  private lastSignCallResultedInAuthenticationFailed = false\n\n  @property({attribute: false})\n  private messageToShow: string = \"\";\n\n  @query(\"#passwordId\")\n  private passwordInput?: HTMLInputElement\n\n  override render() {\n    console.log(\"attempts: \", this.maxNrOfAuthAttempts)\n    if (!this.payload) {\n      console.warn(\"No valid payload provided.\");\n      return nothing;\n    }\n\n    return html`\n      <p>\n        <h1>${this.titleText}</h1>\n        <slot>This is the body</slot>\n        <label for=\"password\">Password:</label>\n        <form id=\"form\">        \n          <input type=\"password\" id=\"passwordId\" name=\"password\"><br><br>\n          <p style=\"color:#FF0000\">\n            ${this.messageToShow}\n          </p>\n          <button type=\"submit\" id=\"acceptButton\" @click=\"${this.handleAcceptButtonClick}\">${this.acceptText}</button>\n        </form>\n        <button id=\"rejectButton\" @click=\"${this.handleRejectButtonClick}\">${this.rejectText}</button>\n      </p>\n    `;\n  }\n\n  private async handleAcceptButtonClick(event: Event) {\n    event.preventDefault();\n    console.log(\"maxNrOfAuthAttempts: \", this.maxNrOfAuthAttempts)\n\n    if (this.attemptIndex >= this.maxNrOfAuthAttempts) {\n      this.messageToShow = \"Number of authentication attempts exceeded\";\n      if (this.lastSignCallResultedInAuthenticationFailed) {\n        this.createAndDispatchFailureEvent(\"Failure during Signing: Authentication did not work. \");\n      }\n      return;\n    }\n\n    console.log(\"handleAcceptButtonClick: \")\n     try {\n        // const url = '/realms/koerber/activate_order/sign?redirect_uri=http%3A%2F%2Fgoogle.com%3Ftest1%3D1%26test2%3D2&description=this_is_an_order'; // Replace with your API endpoint\n        const url = this.signEndpoint;\n        const data = {\n          // Define the data you want to send in the request body\n          payload: this.payload,\n          credentials: {password : this.passwordInput?.value},\n        };\n\n        const response = await fetch(url, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(data),\n        });\n\n\n        if (response.ok) {\n          console.log('POST request successful');\n          const bodyJson = await response.json();\n\n          this.lastSignCallResultedInAuthenticationFailed = false;\n          this.attemptIndex = this.maxNrOfAuthAttempts;\n          this.createAndDispatchAcceptEvent(bodyJson)\n        } else if (response.status === 403) {\n          console.log('403: authentication failed', this.attemptIndex);\n          this.messageToShow = \"Wrong password\";\n          this.lastSignCallResultedInAuthenticationFailed = true;\n          this.attemptIndex++;\n        } else {\n          console.error('POST request failed');\n          this.messageToShow = \"Something unexpected happened\";\n          this.lastSignCallResultedInAuthenticationFailed = false;\n          this.attemptIndex = this.maxNrOfAuthAttempts;\n          this.createAndDispatchFailureEvent(\"Failure during Signing: Unexpected failure happened. Status response of Keycloak is: \" + response.statusText);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        this.messageToShow = \"Something unexpected happened\";\n        this.lastSignCallResultedInAuthenticationFailed = false;\n        this.attemptIndex = this.maxNrOfAuthAttempts;\n        this.createAndDispatchFailureEvent(\"Failure during Signing: Unexpected failure happened: : \" + error);\n      }\n\n      this.passwordInput!.value = '';\n  }\n\n  private handleRejectButtonClick() {\n    console.log('Reject Button pressed');\n\n    this.createAndDispatchRejectEvent()\n  }\n\n\n  private createAndDispatchAcceptEvent(bodyJson: Record<string, string>) {\n    const eventSignedPayloadReceived = new CustomEvent('signed', {\n      detail: {\n        signedPayload: bodyJson.signedPayload,\n      },\n      bubbles: false,\n      composed: false\n    });\n\n    this.dispatchEvent(eventSignedPayloadReceived);\n  }\n\n  private createAndDispatchFailureEvent(reason: String) {\n    const eventAuthenticationFailed = new CustomEvent('failure', {\n      detail: {\n        reason: reason\n      },\n      bubbles: false,\n      composed: false\n    });\n\n    this.dispatchEvent(eventAuthenticationFailed);\n  }\n\n  private createAndDispatchRejectEvent() {\n    const eventRejected = new CustomEvent('rejected', {\n      bubbles: false,\n      composed: false\n    });\n\n    this.dispatchEvent(eventRejected);\n  }\n\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'keycloak-signature': KeycloakSignature;\n  }\n}\n"]}